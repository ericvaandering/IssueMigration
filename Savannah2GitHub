#!  /usr/bin/env python

import argparse
import xmltodict
import pprint



def githubPost(ghConfig, struct):
    pprint.pprint(struct)
    print ""


def makeLabels(ghConfig, xmldict):
    labels = {}

    for issue in xmldict[u'savaneexport']['item']:
        labels['P: %s' % issue['priority']] = 'P: %s' % issue['priority']
        labels['C: %s' % issue['category']] = 'C: %s' % issue['category']
        labels['S: %s' % issue['status']] = 'S: %s' % issue['status']

    # Make the labels at GitHub

    for label in labels.keys():
        struct = {'name':label, 'color':'000000'}
        githubPost(ghConfig, struct)

    #

    return labels


def createIssue(ghConfig, issue, labels):
    title = issue['summary']
    body = issue['original_submission']
    assignee = 'blah' # convertAssignee(issue['assigned_to'])
    label_array = [
        labels['P: %s' % issue['priority']],
        labels['C: %s' % issue['category']],
        labels['S: %s' % issue['status']],
    ]

    struct = {'title':title, 'body':body, 'assignee':assignee, 'labels':label_array}

    githubPost(ghConfig, struct)



if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Migrate Savannah issues from XML file to GitHub project')
    parser.add_argument('xml_file')
    args = parser.parse_args()


    ghConfig = {'user':'', 'password':'', 'project':''}


    xml_file = vars(args)['xml_file']
    xml_fh = open(xml_file)
    xml = xml_fh.read()
    xmldict = xmltodict.parse(xml)


    labels = makeLabels(ghConfig, xmldict)

    for issue in xmldict[u'savaneexport']['item']:
        createIssue(ghConfig, issue, labels)
